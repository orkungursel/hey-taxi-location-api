// Code generated by MockGen. DO NOT EDIT.
// Source: location_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	app "github.com/orkungursel/hey-taxi-location-api/internal/app"
)

// MockLocationService is a mock of LocationService interface.
type MockLocationService struct {
	ctrl     *gomock.Controller
	recorder *MockLocationServiceMockRecorder
}

// MockLocationServiceMockRecorder is the mock recorder for MockLocationService.
type MockLocationServiceMockRecorder struct {
	mock *MockLocationService
}

// NewMockLocationService creates a new mock instance.
func NewMockLocationService(ctrl *gomock.Controller) *MockLocationService {
	mock := &MockLocationService{ctrl: ctrl}
	mock.recorder = &MockLocationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocationService) EXPECT() *MockLocationServiceMockRecorder {
	return m.recorder
}

// SaveLocation mocks base method.
func (m *MockLocationService) SaveLocation(ctx context.Context, userId string, in app.SaveLocationRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveLocation", ctx, userId, in)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveLocation indicates an expected call of SaveLocation.
func (mr *MockLocationServiceMockRecorder) SaveLocation(ctx, userId, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveLocation", reflect.TypeOf((*MockLocationService)(nil).SaveLocation), ctx, userId, in)
}

// SearchLocations mocks base method.
func (m *MockLocationService) SearchLocations(ctx context.Context, req app.SearchLocationRequest) ([]app.LocationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchLocations", ctx, req)
	ret0, _ := ret[0].([]app.LocationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchLocations indicates an expected call of SearchLocations.
func (mr *MockLocationServiceMockRecorder) SearchLocations(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchLocations", reflect.TypeOf((*MockLocationService)(nil).SearchLocations), ctx, req)
}
