// Code generated by MockGen. DO NOT EDIT.
// Source: vehicle_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/orkungursel/hey-taxi-location-api/internal/domain/model"
)

// MockVehicleService is a mock of VehicleService interface.
type MockVehicleService struct {
	ctrl     *gomock.Controller
	recorder *MockVehicleServiceMockRecorder
}

// MockVehicleServiceMockRecorder is the mock recorder for MockVehicleService.
type MockVehicleServiceMockRecorder struct {
	mock *MockVehicleService
}

// NewMockVehicleService creates a new mock instance.
func NewMockVehicleService(ctrl *gomock.Controller) *MockVehicleService {
	mock := &MockVehicleService{ctrl: ctrl}
	mock.recorder = &MockVehicleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVehicleService) EXPECT() *MockVehicleServiceMockRecorder {
	return m.recorder
}

// GetVehicleById mocks base method.
func (m *MockVehicleService) GetVehicleById(ctx context.Context, vehicleId string) (*model.Vehicle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVehicleById", ctx, vehicleId)
	ret0, _ := ret[0].(*model.Vehicle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVehicleById indicates an expected call of GetVehicleById.
func (mr *MockVehicleServiceMockRecorder) GetVehicleById(ctx, vehicleId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVehicleById", reflect.TypeOf((*MockVehicleService)(nil).GetVehicleById), ctx, vehicleId)
}
